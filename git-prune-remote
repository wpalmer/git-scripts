#!/bin/bash
if [ $# -ne 1 ]; then
	echo 'usage: git prune-remote <name>' >&2
	exit 1
fi

remote="$1"
url="$(git config remote."$remote".url)"

if [ -z "$url" ]; then
	echo "fatal: unknown remote '$remote'" >&2
	exit 1
fi

git fetch --quiet --prune "$remote" || exit 1

push="$(git config remote."$remote".push)"
fetch="$(git config remote."$remote".fetch)"

[ -z "$push" ] && push='refs/heads/*:refs/heads/*'
[ -z "$fetch" ] && fetch="refs/heads/*:refs/remotes/$remote/*"

local_push_prefix="${push#+}"
local_push_prefix="${local_push_prefix%/\*:*}"
remote_push_prefix="${push#*:}"
remote_push_prefix="${remote_push_prefix%/\*}"

local_fetch_prefix="${fetch#*:}"
local_fetch_prefix="${local_fetch_prefix%/\*}"
remote_fetch_prefix="${fetch#+}"
remote_fetch_prefix="${remote_fetch_prefix%/\*:*}"

local_remote_prefix="$local_fetch_prefix${remote_push_prefix#$remote_fetch_prefix}"

refspecs="$(
	git for-each-ref "$local_remote_prefix" |
	while read sha type ref; do
		bare=${ref#$local_remote_prefix/}
		local="$local_push_prefix/$bare"
		git rev-parse --verify -q "$local" > /dev/null || echo :"$remote_push_prefix/$bare"
	done
)"
[ -z "$refspecs" ] && exit 0
git push "$remote" $refspecs
